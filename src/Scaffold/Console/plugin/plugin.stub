<?php namespace {{studly_author}}\{{studly_name}};

use Backend\Facades\Backend;
use System\Traits\ConfigMaker;
use System\Classes\PluginBase;
use {{studly_author}}\{{studly_name}}\Models\Settings;

/**
 * {{name}} Plugin Information File
 */
class Plugin extends PluginBase
{

    use ConfigMaker;

    public $require = [
        'OpenDroplet.Translate'
    ];

    /**
     * Returns information about this plugin.
     *
     * @return array
     */
    public function pluginDetails()
    {
        return [
            'name'        => '{{lower_author}}.{{lower_name}}::lang.plugin.name',
            'description' => '{{lower_author}}.{{lower_name}}::lang.plugin.description',
            'author'      => '{{author}}',
            'icon'        => 'icon-leaf'
        ];
    }

    /**
     * Register method, called when the plugin is first registered.
     *
     * @return void
     */
    public function register()
    {

    }

    /**
     * Boot method, called right before the request route.
     *
     * @return array
     */
    public function boot()
    {

    }

    /**
     * Registers any front-end components implemented in this plugin.
     *
     * @return array
     */
    public function registerComponents()
    {
        return []; // Remove this line to activate

        return [
            '{{studly_author}}\{{studly_name}}\Components\MyComponent' => 'myComponent',
        ];
    }

    /**
     * Registers any back-end permissions used by this plugin.
     *
     * @return array
     */
    public function registerPermissions()
    {
        return [
            '{{lower_author}}.{{lower_name}}.manage_settings' => [
                'tab'   => '{{lower_author}}.{{lower_name}}::lang.permissions.tab',
                'label' => '{{lower_author}}.{{lower_name}}::lang.permissions.manage_settings'
            ],
            '{{lower_author}}.{{lower_name}}.manage_{{lower_name}}' => [
                'tab'   => '{{lower_author}}.{{lower_name}}::lang.permissions.tab',
                'label' => '{{lower_author}}.{{lower_name}}::lang.permissions.manage_{{lower_name}}'
            ],
        ];
    }

    /**
     * Registers back-end navigation items for this plugin.
     *
     * @return array
     */
    public function registerNavigation()
    {
        return []; // Remove this line to activate

        return [
            '{{lower_name}}' => [
                'label'       => '{{name}}',
                'url'         => Backend::url('{{lower_author}}/{{lower_name}}/mycontroller'),
                'icon'        => 'icon-leaf',
                'permissions' => ['{{lower_author}}.{{lower_name}}.*'],
                'order'       => 500,
            ],
        ];
    }

    public function registerSettings()
    {
        return [
            'settings' => [
                'label'       => '{{lower_author}}.{{lower_name}}::lang.settings.label',
                'description' => '{{lower_author}}.{{lower_name}}::lang.settings.description',
                'category'    => '{{lower_author}}.{{lower_name}}::lang.settings.category',
                'icon'        => 'icon-cog',
                'class'       => Settings::class,
                'order'       => 500,
                'permissions' => ['{{lower_author}}.{{lower_name}}.manage_settings']
            ]
        ];
    }
    
}
